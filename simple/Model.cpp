// THIS FILE WAS AUTO GENERATED BY model2mbed.exe DO NOT MODIFY!!!

#include "Model.h"
using namespace ModelImpl;

namespace Model {
// Channels
SYNCHRONIZATION_CHANNEL_STATE GLOBAL_CHANNEL_VAR_m_BolusReq_STATE; // chan m_BolusReq

const SYNCHRONIZATION_CHANNEL_DATA GLOBAL_CHANNEL_VAR_m_BolusReq_DATA = // chan m_BolusReq
    {
        DBGSTR("chan m_BolusReq[]"),	// name
        false,				// urgent
        false,				// broadcast
        &GLOBAL_CHANNEL_VAR_m_BolusReq_STATE,              // state
    };

SYNCHRONIZATION_CHANNEL GLOBAL_CHANNEL_VAR_m_BolusReq = // chan m_BolusReq
    {
        &GLOBAL_CHANNEL_VAR_m_BolusReq_DATA,         // data
        NULL,              // fired
        NULL,              // context
    };

SYNCHRONIZATION_CHANNEL_STATE GLOBAL_CHANNEL_VAR_c_StartInfusion_STATE; // chan c_StartInfusion

const SYNCHRONIZATION_CHANNEL_DATA GLOBAL_CHANNEL_VAR_c_StartInfusion_DATA = // chan c_StartInfusion
    {
        DBGSTR("chan c_StartInfusion[]"),	// name
        false,				// urgent
        false,				// broadcast
        &GLOBAL_CHANNEL_VAR_c_StartInfusion_STATE,              // state
    };

SYNCHRONIZATION_CHANNEL GLOBAL_CHANNEL_VAR_c_StartInfusion = // chan c_StartInfusion
    {
        &GLOBAL_CHANNEL_VAR_c_StartInfusion_DATA,         // data
        NULL,              // fired
        NULL,              // context
    };

SYNCHRONIZATION_CHANNEL_STATE GLOBAL_CHANNEL_VAR_c_StopInfusion_STATE; // chan c_StopInfusion

const SYNCHRONIZATION_CHANNEL_DATA GLOBAL_CHANNEL_VAR_c_StopInfusion_DATA = // chan c_StopInfusion
    {
        DBGSTR("chan c_StopInfusion[]"),	// name
        false,				// urgent
        false,				// broadcast
        &GLOBAL_CHANNEL_VAR_c_StopInfusion_STATE,              // state
    };

SYNCHRONIZATION_CHANNEL GLOBAL_CHANNEL_VAR_c_StopInfusion = // chan c_StopInfusion
    {
        &GLOBAL_CHANNEL_VAR_c_StopInfusion_DATA,         // data
        NULL,              // fired
        NULL,              // context
    };

SYNCHRONIZATION_CHANNEL_STATE GLOBAL_CHANNEL_VAR_m_EmptySyringe_STATE; // chan m_EmptySyringe

const SYNCHRONIZATION_CHANNEL_DATA GLOBAL_CHANNEL_VAR_m_EmptySyringe_DATA = // chan m_EmptySyringe
    {
        DBGSTR("chan m_EmptySyringe[]"),	// name
        false,				// urgent
        false,				// broadcast
        &GLOBAL_CHANNEL_VAR_m_EmptySyringe_STATE,              // state
    };

SYNCHRONIZATION_CHANNEL GLOBAL_CHANNEL_VAR_m_EmptySyringe = // chan m_EmptySyringe
    {
        &GLOBAL_CHANNEL_VAR_m_EmptySyringe_DATA,         // data
        NULL,              // fired
        NULL,              // context
    };

SYNCHRONIZATION_CHANNEL_STATE GLOBAL_CHANNEL_VAR_c_Alarm_STATE; // chan c_Alarm

const SYNCHRONIZATION_CHANNEL_DATA GLOBAL_CHANNEL_VAR_c_Alarm_DATA = // chan c_Alarm
    {
        DBGSTR("chan c_Alarm[]"),	// name
        false,				// urgent
        false,				// broadcast
        &GLOBAL_CHANNEL_VAR_c_Alarm_STATE,              // state
    };

SYNCHRONIZATION_CHANNEL GLOBAL_CHANNEL_VAR_c_Alarm = // chan c_Alarm
    {
        &GLOBAL_CHANNEL_VAR_c_Alarm_DATA,         // data
        NULL,              // fired
        NULL,              // context
    };


// ChannelsList
SYNCHRONIZATION_CHANNEL* ALL_CHANNELS[] = 
    {
        &GLOBAL_CHANNEL_VAR_m_BolusReq,
        &GLOBAL_CHANNEL_VAR_c_StartInfusion,
        &GLOBAL_CHANNEL_VAR_c_StopInfusion,
        &GLOBAL_CHANNEL_VAR_m_EmptySyringe,
        &GLOBAL_CHANNEL_VAR_c_Alarm,
        NULL
    };


SYSTEM_VARIABLES SystemVariables;

// Process - pump

static bool guardfunc_pump_TRANS_Infusion__Start__0()
{
    return ((((int)SystemVariables.clk_pump_x)>=(850)));
};
static void updatefunc_pump_TRANS_Infusion__Start__0()
{
    SystemVariables.clk_pump_x = ((0));
};
const TRANSITION_ENTRY_DATA pump_TRANS_Infusion__Start__0_DATA =
    {
        DBGSTR("Infusion__Start__0"),	// name
        &pump_STATE_Start,				// target
        NULL,				// receive
        &GLOBAL_CHANNEL_VAR_c_StopInfusion,				// send
        guardfunc_pump_TRANS_Infusion__Start__0,               // guard
        updatefunc_pump_TRANS_Infusion__Start__0,               // update
    };

TRANSITION_ENTRY pump_TRANS_Infusion__Start__0 =
    {
        &pump_TRANS_Infusion__Start__0_DATA,         // data
        NULL,              // transition_pre_execute
        NULL,              // transition_post_execute
        NULL,              // context
    };

static bool guardfunc_pump_TRANS_EmptyDetected__Start__0()
{
    return ((((int)SystemVariables.clk_pump_x)>=(200)));
};
const TRANSITION_ENTRY_DATA pump_TRANS_EmptyDetected__Start__0_DATA =
    {
        DBGSTR("EmptyDetected__Start__0"),	// name
        &pump_STATE_Start,				// target
        NULL,				// receive
        &GLOBAL_CHANNEL_VAR_c_Alarm,				// send
        guardfunc_pump_TRANS_EmptyDetected__Start__0,               // guard
        NULL,               // update
    };

TRANSITION_ENTRY pump_TRANS_EmptyDetected__Start__0 =
    {
        &pump_TRANS_EmptyDetected__Start__0_DATA,         // data
        NULL,              // transition_pre_execute
        NULL,              // transition_post_execute
        NULL,              // context
    };

static void updatefunc_pump_TRANS_Infusion__EmptyDetected__0()
{
    SystemVariables.clk_pump_x = ((0));
};
const TRANSITION_ENTRY_DATA pump_TRANS_Infusion__EmptyDetected__0_DATA =
    {
        DBGSTR("Infusion__EmptyDetected__0"),	// name
        &pump_STATE_EmptyDetected,				// target
        &GLOBAL_CHANNEL_VAR_m_EmptySyringe,				// receive
        NULL,				// send
        NULL,               // guard
        updatefunc_pump_TRANS_Infusion__EmptyDetected__0,               // update
    };

TRANSITION_ENTRY pump_TRANS_Infusion__EmptyDetected__0 =
    {
        &pump_TRANS_Infusion__EmptyDetected__0_DATA,         // data
        NULL,              // transition_pre_execute
        NULL,              // transition_post_execute
        NULL,              // context
    };

static bool guardfunc_pump_TRANS_BolusRequested__Infusion__0()
{
    return ((((int)SystemVariables.clk_pump_x)>=(300)));
};
static void updatefunc_pump_TRANS_BolusRequested__Infusion__0()
{
    SystemVariables.clk_pump_x = ((0));
};
const TRANSITION_ENTRY_DATA pump_TRANS_BolusRequested__Infusion__0_DATA =
    {
        DBGSTR("BolusRequested__Infusion__0"),	// name
        &pump_STATE_Infusion,				// target
        NULL,				// receive
        &GLOBAL_CHANNEL_VAR_c_StartInfusion,				// send
        guardfunc_pump_TRANS_BolusRequested__Infusion__0,               // guard
        updatefunc_pump_TRANS_BolusRequested__Infusion__0,               // update
    };

TRANSITION_ENTRY pump_TRANS_BolusRequested__Infusion__0 =
    {
        &pump_TRANS_BolusRequested__Infusion__0_DATA,         // data
        NULL,              // transition_pre_execute
        NULL,              // transition_post_execute
        NULL,              // context
    };

static bool guardfunc_pump_TRANS_Start__BolusRequested__0()
{
    return ((((int)SystemVariables.clk_pump_x)>=(5000)));
};
static void updatefunc_pump_TRANS_Start__BolusRequested__0()
{
    SystemVariables.clk_pump_x = ((0));
};
const TRANSITION_ENTRY_DATA pump_TRANS_Start__BolusRequested__0_DATA =
    {
        DBGSTR("Start__BolusRequested__0"),	// name
        &pump_STATE_BolusRequested,				// target
        &GLOBAL_CHANNEL_VAR_m_BolusReq,				// receive
        NULL,				// send
        guardfunc_pump_TRANS_Start__BolusRequested__0,               // guard
        updatefunc_pump_TRANS_Start__BolusRequested__0,               // update
    };

TRANSITION_ENTRY pump_TRANS_Start__BolusRequested__0 =
    {
        &pump_TRANS_Start__BolusRequested__0_DATA,         // data
        NULL,              // transition_pre_execute
        NULL,              // transition_post_execute
        NULL,              // context
    };

static bool guardfunc_pump_STATE_EmptyDetected()
{
    return ((((int)SystemVariables.clk_pump_x)<=(300)));
};
const TRANSITION_ENTRY* pump_STATE_EmptyDetected_OUT[] = 
    {
        &pump_TRANS_EmptyDetected__Start__0, // EmptyDetected__Start__0
    NULL
    };

const STATE_ENTRY_DATA pump_STATE_EmptyDetected_DATA =
    {
        DBGSTR("EmptyDetected"),	// name
        (TRANSITION_ENTRY* const*)&pump_STATE_EmptyDetected_OUT,	// target
        StateNormal, // mode
        guardfunc_pump_STATE_EmptyDetected, // guard
    };

STATE_ENTRY pump_STATE_EmptyDetected =
    {
        &pump_STATE_EmptyDetected_DATA,         // data
        NULL,              // state_enter
        NULL,              // state_leave
        NULL,              // context
    };

static bool guardfunc_pump_STATE_Infusion()
{
    return ((((int)SystemVariables.clk_pump_x)<=(1000)));
};
const TRANSITION_ENTRY* pump_STATE_Infusion_OUT[] = 
    {
        &pump_TRANS_Infusion__Start__0, // Infusion__Start__0
        &pump_TRANS_Infusion__EmptyDetected__0, // Infusion__EmptyDetected__0
    NULL
    };

const STATE_ENTRY_DATA pump_STATE_Infusion_DATA =
    {
        DBGSTR("Infusion"),	// name
        (TRANSITION_ENTRY* const*)&pump_STATE_Infusion_OUT,	// target
        StateNormal, // mode
        guardfunc_pump_STATE_Infusion, // guard
    };

STATE_ENTRY pump_STATE_Infusion =
    {
        &pump_STATE_Infusion_DATA,         // data
        NULL,              // state_enter
        NULL,              // state_leave
        NULL,              // context
    };

static bool guardfunc_pump_STATE_BolusRequested()
{
    return ((((int)SystemVariables.clk_pump_x)<=(500)));
};
const TRANSITION_ENTRY* pump_STATE_BolusRequested_OUT[] = 
    {
        &pump_TRANS_BolusRequested__Infusion__0, // BolusRequested__Infusion__0
    NULL
    };

const STATE_ENTRY_DATA pump_STATE_BolusRequested_DATA =
    {
        DBGSTR("BolusRequested"),	// name
        (TRANSITION_ENTRY* const*)&pump_STATE_BolusRequested_OUT,	// target
        StateNormal, // mode
        guardfunc_pump_STATE_BolusRequested, // guard
    };

STATE_ENTRY pump_STATE_BolusRequested =
    {
        &pump_STATE_BolusRequested_DATA,         // data
        NULL,              // state_enter
        NULL,              // state_leave
        NULL,              // context
    };

const TRANSITION_ENTRY* pump_STATE_Start_OUT[] = 
    {
        &pump_TRANS_Start__BolusRequested__0, // Start__BolusRequested__0
    NULL
    };

const STATE_ENTRY_DATA pump_STATE_Start_DATA =
    {
        DBGSTR("Start"),	// name
        (TRANSITION_ENTRY* const*)&pump_STATE_Start_OUT,	// target
        StateNormal, // mode
        NULL, // guard
    };

STATE_ENTRY pump_STATE_Start =
    {
        &pump_STATE_Start_DATA,         // data
        NULL,              // state_enter
        NULL,              // state_leave
        NULL,              // context
    };

extern PROCESS_ENTRY_STATE pump_PROCESS_STATE;

PROCESS_ENTRY_THREAD pump_PROCESS_THREAD(&pump_PROCESS_STATE);

const PROCESS_ENTRY_DATA pump_PROCESS_DATA = 
    {
        DBGSTR("pump_PROCESS"),	// name
        &pump_STATE_Start, // initState
        &pump_PROCESS_THREAD, // threadptr
    };

PROCESS_ENTRY pump_PROCESS = 
    {
        &pump_PROCESS_DATA,         // data
        NULL,              // process_start
        NULL,              // context
    };

PROCESS_ENTRY_STATE pump_PROCESS_STATE = 
    {
        &pump_PROCESS,         // process
        &pump_PROCESS_THREAD,  // thread
        &pump_PROCESS_DATA,    // data
        NULL,              // current
        NULL,              // next
        false,              // stepped
        false,              // normal_stepped
        ProcessInit,        // state
    };



} // namespace
namespace Model {
volatile PROCESS_ENTRY_STATE* PROCESS_LIST[] =
{
   NULL,
    NULL
};
}

namespace ModelImpl {
volatile PROCESS_ENTRY_STATE** PROCESS_LIST = ::Model::PROCESS_LIST;
int MAX_PROCESS_LIST = 1;
SYNCHRONIZATION_CHANNEL** ALL_CHANNELS = ::Model::ALL_CHANNELS;
}

